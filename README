Simple HTTP server indended for experimenting with GC behavior. There
is also a run.sh script intended to be a convenient way to run it with
different VM options. Certain actions are taken by submitting HTTP
requests to it once it is started.

To run it without any particular Java VM options and using whatever
Java maven uses:

  mvn compile
  mvn clojure:run

Easiest way to run it with run.sh is:

  mvn package
  JAVA_HOME=... HTTPGCTEST_COLLECTOR="g1" ./run.sh

If you want to drive the generation of transient data, you may wish to
use something like ab:

  ab -k -c 100 -n 200000 http://localhost:9191/gengarbage

In order to generate persistent data:

  curl http://localhost:9191/gendata

to double the amount of permanent data kept on the keap (or specify
"amount" parameter). To drop permanent data, request:

  http://localhost:9191/dropdata

You can use 'ratio' and 'amount parameters. One way to generate steady
state is to repeatedly do something like:

  curl 'http://localhost:9191/dropdata?ratio=0.10'
  curl 'http://localhost:9191/gendata?amount=10000'

